{"version":3,"sources":["components/appheader/index.js","components/appheader/AppHeader.js","components/searchpanel/index.js","components/searchpanel/SearchPanel.js","components/itemstatusfilter/index.js","components/itemstatusfilter/ItemStatusFilter.js","components/todolistitem/index.js","components/todolistitem/TodoListItem.js","components/todolist/index.js","components/todolist/TodoList.js","components/itemaddform/index.js","components/itemaddform/itemAddForm.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","event","target","value","_this","setState","props","type","placeholder","this","onChange","Component","ItemStatusFilter","buttons","name","label","_this$props","filter","onFilterChange","map","clazz","concat","key","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","TodoList","todos","elements","item","id","itemProps","Object","objectWithoutProperties","todolistitem","assign","ItemAddForm","onLabelChange","e","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","addItem","text","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItem","search","doneCount","todoCount","appheader","searchpanel","itemstatusfilter","todolist","itemaddform","ReactDom","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.5ef3642d.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;","import React from 'react';\nimport './AppHeader.css';\n\n\nconst AppHeader = ({ toDo, done }) => {\n    return (\n        <div className='app_header d-flex'>\n            <h1>My ToDo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    );\n};\n\nexport default AppHeader;","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\nimport './SearchPanel.css';\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        term: '',\n    };\n\n    onSearchChange = (event) => {\n        const term = event.target.value;\n        this.setState({ term });\n        this.props.onSearchChange(term);\n    };\n\n\n    render() {\n        return (\n            <input\n                type='text'\n                className='form-control search-input'\n                placeholder='Type here to search'\n                value={this.state.term}\n                onChange={this.onSearchChange}\n            />\n        );\n    };\n};","import ItemStatusFilter from './ItemStatusFilter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\nimport './ItemStatusFilter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        { name: 'all', label: 'All' },\n        { name: 'active', label: 'Active' },\n        { name: 'done', label: 'Done' },\n    ];\n\n    render() {\n\n        const { filter, onFilterChange } = this.props;\n\n        const buttons = this.buttons.map(({ name, label }) => {\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n            return (\n                <button type='button'\n                    className={`btn ${clazz}`}\n                    key={name}\n                    onClick={() => onFilterChange(name)}>\n                    {label}\n                </button >\n            )\n        })\n\n        return (\n            <div className=\"btn-group\" >\n                {buttons}\n            </div>\n        );\n    };\n};","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\nimport './TodoListItem.css';\n\n\nexport default class TodoListItem extends Component {\n\n    render() {\n\n        const { label, onDeleted,\n            onToggleImportant, onToggleDone,\n            done, important } = this.props;\n\n        let className = 'todo-list-item';\n        if (done) {\n            className += ' done';\n        }\n\n        if (important) {\n            className += ' important';\n        }\n\n        return (\n            <span className={className}>\n                <span\n                    className='todo-list-item-label'\n                    onClick={onToggleDone}>\n                    {label}\n                </span>\n\n                <button type='button'\n                    className='btn btn-outline-success btn-sm float-right'\n                    onClick={onToggleImportant}>\n                    <i className='fa fa-exclamation' />\n                </button >\n                <button type='button'\n                    className='btn btn-outline-danger btn-sm float-right'\n                    onClick={onDeleted}>\n                    <i className='fa fa-trash-o' />\n                </button >\n\n            </span>\n        );\n    };\n};\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;","import React from 'react';\nimport TodoListItem from './../todolistitem';\nimport './TodoList.css'\n\nconst TodoList = ({ todos, onDeleted,\n    onToggleImportant, onToggleDone, }) => {\n\n    const elements = todos.map((item) => {\n\n        const { id, ...itemProps } = item;\n\n        return (\n            <li key={id} className='list-group-item'>\n                <TodoListItem\n                    {...itemProps}\n                    onDeleted={() => onDeleted(id)} \n                    onToggleImportant={()=>onToggleImportant(id)}\n                    onToggleDone={()=>onToggleDone(id)}/>\n            </li>\n        );\n    });\n\n    return (\n        <ul className='todo-list list-group'>\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;","import ItemAddForm from './itemAddForm';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './itemAddForm.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: '',\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value,\r\n        });\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: '',\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className='item-add-form d-flex'\r\n                onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    placeholder=\"What needs to be done\"\r\n                    value={this.state.label} />\r\n                <button\r\n                    className='btn btn-outline-secondary'>\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n\r\n};","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../appheader';\r\nimport SearchPanel from '../searchpanel';\r\nimport ItemStatusFilter from '../itemstatusfilter'\r\nimport TodoList from '../todolist';\r\nimport ItemAddForm from '../itemaddform';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink coffee'),\r\n            this.createTodoItem('Make Awesome App'),\r\n            this.createTodoItem('Have a lucnh'),\r\n        ],\r\n        term: '',\r\n        filter: 'all',\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++,\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n\r\n        this.setState(({ todoData }) => {\r\n\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray,\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({ todoData }) => {\r\n\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n            return {\r\n                todoData: newArr,\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n\r\n        // 1. update object\r\n        const oldItem = arr[idx];\r\n\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important'),\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done'),\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    search(items, term) {\r\n\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((items) => {\r\n            return items.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            default:\r\n                return items;\r\n            }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n\r\n        const visibleItem = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo_app\">\r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange} />\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange} />\r\n                </div>\r\n                <TodoList\r\n                    todos={visibleItem}\r\n                    onDeleted={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleDone={this.onToggleDone} />\r\n\r\n                <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    };\r\n};","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app'\n\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}